{"version":3,"sources":["../src/module.js"],"names":["_","kbn","MetricsPanelCtrl","Builder","Presenter","Linker","panelDefaults","radius","defaultColor","thresholds","linkIndex","linkVars","format","decimals","mathScratchPad","mathDisplayValue","mathColorValue","StatusDotCtrl","$scope","$injector","linkSrv","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onRender","builder","presenter","linker","addEditorTab","unitFormats","getUnitFormats","seriesList","render","dots","call","subitem","value","push","color","index","splice","name","dot","formatFunc","valueFormats","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import './module.css!'\nimport _ from 'lodash'\nimport kbn from 'app/core/utils/kbn'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport {Builder} from './util/builder'\nimport {Presenter} from './util/presenter'\nimport {Linker} from './util/linker'\n\nconst panelDefaults = {\n  radius: '20px',\n  defaultColor: 'rgb(117, 117, 117)',\n  thresholds: [],\n  linkIndex: '0',\n  linkVars: [],\n  format: 'none',\n  decimals: 2,\n  mathScratchPad: 'data = size(data)[1] == 0 ? [NaN] : data',\n  mathDisplayValue: 'data[end]',\n  mathColorValue: 'data[end]'\n}\n\nexport class StatusDotCtrl extends MetricsPanelCtrl {\n  constructor ($scope, $injector, linkSrv) {\n    super($scope, $injector)\n    _.defaults(this.panel, panelDefaults)\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n\n    this.builder = new Builder(this.panel)\n    this.presenter = new Presenter(this.panel)\n    this.linker = new Linker(this.panel, linkSrv)\n  }\n\n  onInitEditMode () {\n    this.addEditorTab('Options', 'public/plugins/btplc-status-dot-panel/editor.html')\n    this.addEditorTab('Values', 'public/plugins/btplc-status-dot-panel/values.html')\n    this.addEditorTab('Links', 'public/plugins/btplc-status-dot-panel/links.html')\n    this.unitFormats = kbn.getUnitFormats()\n  }\n\n  onDataReceived (seriesList) {\n    this.seriesList = seriesList\n    this.render()\n  }\n\n  onRender () {\n    this.dots = this.builder.call(this.seriesList)\n    this.presenter.call(this.dots)\n    this.linker.call(this.dots)\n  }\n\n  onEditorSetFormat (subitem) {\n    this.panel.format = subitem.value\n    this.render()\n  }\n\n  onEditorAddThreshold () {\n    this.panel.thresholds.push({ value: 0, color: this.panel.defaultColor })\n    this.render()\n  }\n\n  onEditorRemoveThreshold (index) {\n    this.panel.thresholds.splice(index, 1)\n    this.render()\n  }\n\n  onEditorAddLinkVar () {\n    this.panel.linkVars.push({ name: 'myvar', index: '0' })\n    this.render()\n  }\n\n  onEditorRemoveLinkVar (index) {\n    this.panel.linkVars.splice(index, 1)\n    this.render()\n  }\n\n  styleFor (dot) {\n    return { 'background': dot.color, 'width': this.panel.radius, 'height': this.panel.radius }\n  }\n\n  format (value) {\n    var formatFunc = kbn.valueFormats[this.panel.format]\n    return formatFunc(value, this.panel.decimals, null)\n  }\n}\n\nStatusDotCtrl.templateUrl = 'module.html'\nexport { StatusDotCtrl as PanelCtrl }\n"]}